{
  "categories": [
    {
      "id": 1,
      "name": "kriptografija",
      "levels": [
        {
          "id": 101,
          "name": "Osnove simetrične i asimetrične kriptografije",
          "lesson": "Kriptografija je temeljna komponenta sigurnosti u digitalnom svijetu, a osnovne metode uključuju simetričnu i asimetričnu kriptografiju. Obje metode omogućuju sigurno slanje podataka, ali se razlikuju u načinu na koji se ključevi koriste za enkripciju i dekripciju. Simetrična kriptografija koristi isti ključ za enkripciju i dekripciju podataka. Pošiljatelj i primatelj moraju dijeliti isti ključ, što može biti sigurnosni rizik ako ključ nije zaštićen. Algoritmi poput AES (Advanced Encryption Standard) najčešće se koriste zbog visoke sigurnosti i brzine. Glavna prednost simetrične kriptografije je brzina, dok je najveći izazov sigurna distribucija ključeva. Asimetrična kriptografija koristi dva različita ključa: javni ključ za enkripciju i privatni ključ za dekripciju. Javni ključ može biti slobodno distribuiran, dok privatni ključ ostaje zaštićen. Najpoznatiji asimetrični algoritam je RSA (Rivest-Shamir-Adleman). Ovaj sustav omogućuje sigurno slanje podataka i autentifikaciju bez potrebe za dijeljenjem ključeva. Glavna mana je veća složenost i sporija izvedba u odnosu na simetričnu kriptografiju. Obje vrste kriptografije često se koriste zajedno. Na primjer, u TLS (Transport Layer Security) protokolu, asimetrična kriptografija koristi se za uspostavu sigurne veze i razmjenu ključeva, dok simetrična kriptografija šifrira podatke zbog svoje brzine. Razumijevanje oba pristupa ključno je za sigurnosne inženjere i sudionike CTF natjecanja.",
          "video": "https://example.com/video1",
          "fun_facts": [
            {
              "question": "Tko je otac moderne kriptografije?",
              "answer": "Otac moderne kriptografije smatra se Claude Shannon, američki matematičar i inženjer koji je postavio temelje teorije informacije i kriptografije. Njegovo najpoznatije djelo, 'A Mathematical Theory of Communication', objavljeno 1948. godine, definiralo je osnovne principe sigurnosti u komunikacijama i šifriranju podataka. Shannon je također razvio koncept teorijske granice sigurnosti koju danas primjenjujemo u mnogim modernim kriptografskim sustavima. Njegov rad na sigurnosti i šifriranju omogućio je razvoj sofisticiranih algoritama poput AES-a i RSA-a, koji se koriste u današnjoj zaštiti podataka."
            },
            {
              "question": "Koja je razlika između simetrične i asimetrične kriptografije?",
              "answer": "Simetrična kriptografija koristi isti ključ za enkripciju i dekripciju podataka. To znači da pošiljatelj i primatelj moraju imati isti ključ, što može predstavljati sigurnosni izazov u slučaju kompromitacije ključa. Najpoznatiji primjer simetrične kriptografije je AES. S druge strane, asimetrična kriptografija koristi dva ključa: javni i privatni. Javni ključ se koristi za enkripciju, dok privatni ključ služi za dekripciju. Ovaj sustav omogućuje sigurnu razmjenu podataka bez potrebe za dijeljenjem tajnih ključeva, a najpoznatiji primjer je RSA algoritam. Asimetrična kriptografija je složenija i sporija, ali pruža bolju sigurnost u otvorenim mrežama."
            },
            {
              "question": "Koji je najpoznatiji algoritam asimetrične kriptografije?",
              "answer": "Jedan od najpoznatijih algoritama asimetrične kriptografije je RSA (Rivest-Shamir-Adleman), koji je temeljen na matematičkom problemu faktorizacije velikih brojeva. RSA omogućava sigurno šifriranje podataka i digitalne potpise, što ga čini ključnim dijelom mnogih sigurnosnih protokola, poput HTTPS-a. RSA koristi par ključeva: javni ključ za enkripciju podataka i privatni ključ za dekripciju. Iako je vrlo siguran, RSA može biti sporiji od simetričnih algoritama poput AES-a, zbog čega se često koristi u kombinaciji s simetričnom kriptografijom za povećanje učinkovitosti."
            },
            {
              "question": "Što je hash funkcija u kriptografiji?",
              "answer": "Hash funkcija je matematički algoritam koji pretvara ulazni podatak u fiksnu duljinu, obično u obliku niza znakova ili brojeva. Ključna karakteristika hash funkcija je da male promjene u ulaznim podacima rezultiraju velikim promjenama u izlaznom rezultatu, što znači da je gotovo nemoguće rekonstruirati originalne podatke iz hasha. Hash funkcije se koriste za provjeru integriteta podataka, poput u digitalnim potpisima, te za stvaranje sigurnih i jedinstvenih identifikatora za podatke. Najpoznatiji primjer hash funkcije je SHA-256, koji se koristi u Bitcoin mreži."
            },
            {
              "question": "Kako se kvantna računala mogu odraziti na kriptografiju?",
              "answer": "Kvantna računala predstavljaju prijetnju postojećim kriptografskim sustavima jer mogu efikasno riješiti matematičke probleme koji trenutno zahtijevaju ogromne računalne resurse. Na primjer, kvantna računala mogu brzo faktorizirati velike brojeve, što bi moglo ugroziti sigurnost RSA algoritma. Kvantna računala također imaju potencijal za razbijanje simetričnih kriptografskih sustava, iako je za njih potrebna veća računalna snaga. Kao odgovor na ovu prijetnju, istražuju se kvantno otporni algoritmi koji bi bili sigurni i u eri kvantnih računala, ali ta tehnologija još nije široko dostupna."
            }
          ]
        },
        {
          "id": 102,
          "name": "Hash funkcije i digitalni potpisi",
          "lesson": "Hash funkcije i digitalni potpisi ključni su koncepti u kriptografiji koji omogućuju provjeru integriteta podataka i autentifikaciju korisnika. Hash funkcija je jednosmjerna matematička funkcija koja uzima ulazne podatke i stvara jedinstvenu fiksnu duljinu izlazne vrijednosti (hash). Glavne karakteristike hash funkcija su determinističnost, otpornost na sudare i osjetljivost na promjene u ulazu. Primjeri popularnih hash algoritama uključuju SHA-256 i MD5, iako se MD5 danas smatra nesigurnim. Hash funkcije se često koriste za sažimanje lozinki, provjeru integriteta datoteka i digitalne potpise. Digitalni potpis koristi hash funkcije i asimetričnu kriptografiju kako bi se osigurala autentičnost i cjelovitost podataka. Proces uključuje stvaranje hasha poruke, koji se zatim šifrira privatnim ključem pošiljatelja kako bi se stvorio digitalni potpis. Primatelj može provjeriti potpis dešifriranjem pomoću javnog ključa pošiljatelja i usporediti dobiveni hash s onim izvorne poruke. Ako se hash vrijednosti podudaraju, poruka je autentična i nije mijenjana. Digitalni potpisi se koriste u elektroničkim transakcijama, sigurnoj komunikaciji i pravno obvezujućim dokumentima. Kombinacija hash funkcija i digitalnih potpisa omogućuje sigurnu i pouzdanu razmjenu podataka u digitalnom okruženju, što ih čini ključnim alatima u modernoj kriptografiji i CTF natjecanjima.",
          "video": "https://example.com/video2",
          "fun_facts": [
            {
              "question": "Zašto se hash funkcije nazivaju jednosmjernim?",
              "answer": "Hash funkcije su jednosmjerne jer nije moguće iz hash vrijednosti rekonstruirati originalne podatke. Kada se podaci proslijede kroz hash funkciju, dobije se jedinstveni sažetak fiksne duljine, ali obrnut proces nije izvediv. Ova svojstva čine ih idealnima za sigurnu pohranu lozinki i provjeru integriteta podataka. Na primjer, kada unesete lozinku na web stranicu, ona se ne sprema u izvornom obliku, već kao hash, što onemogućuje napadačima da je lako ukradu čak i ako dobiju pristup bazi podataka."
            },
            {
              "question": "Kako se digitalni potpisi koriste za provjeru autentičnosti?",
              "answer": "Digitalni potpisi koriste asimetričnu kriptografiju kako bi osigurali autentičnost i cjelovitost podataka. Kada netko želi poslati poruku, prvo stvara njen hash i zatim ga šifrira privatnim ključem kako bi generirao digitalni potpis. Primatelj može dešifrirati potpis pomoću javnog ključa pošiljatelja i usporediti dobiveni hash s originalnim podacima. Ako se podudaraju, zna da je poruka autentična i nije mijenjana. Digitalni potpisi su temelj sigurnih elektroničkih transakcija, pravnih dokumenata i softverskih certifikata."
            },
            {
              "question": "Zašto se MD5 i SHA-1 više ne smatraju sigurnima?",
              "answer": "MD5 i SHA-1 hash funkcije više se ne smatraju sigurnima jer su otkriveni učinkoviti napadi sudara. Napad sudara znači da je moguće pronaći dva različita unosa koji generiraju isti hash, što može dovesti do krivotvorenja podataka ili digitalnih potpisa. U 2017. Google je pokazao uspješan napad na SHA-1, stvarajući dvije različite PDF datoteke s istim hashom. Zbog toga se danas preporučuju sigurniji algoritmi poput SHA-256 ili SHA-3, koji su otporniji na ove vrste napada."
            },
            {
              "question": "Kako hash funkcije osiguravaju integritet podataka?",
              "answer": "Hash funkcije omogućuju provjeru integriteta podataka stvaranjem jedinstvenog sažetka (hasha) iz originalnog sadržaja. Kada netko preuzme datoteku ili poruku, može generirati hash i usporediti ga s onim koji je izvorno objavljen. Ako se hash vrijednosti podudaraju, podaci nisu mijenjani. Ovaj princip se koristi u digitalnim certifikatima, blockchain tehnologiji i sigurnosnim protokolima poput TLS-a, gdje osigurava da se preneseni podaci nisu promijenili tijekom prijenosa ili napada treće strane."
            },
            {
              "question": "Kako blockchain koristi hash funkcije za sigurnost?",
              "answer": "Blockchain koristi hash funkcije kako bi osigurao nepromjenjivost podataka i zaštitu od manipulacija. Svaki blok sadrži hash prethodnog bloka, čineći lanac sigurnim jer bi promjena jednog bloka zahtijevala izmjenu svih sljedećih. Osim toga, transakcije unutar bloka se grupiraju pomoću Merkle stabala, gdje se svaki sloj podataka hashira dok se ne dobije jedinstveni 'root hash'. Ova struktura omogućuje brzu provjeru integriteta podataka, čineći blockchain otpornim na lažiranje i napade."
            }
          ]
        },
        {
          "id": 103,
          "name": "Napredni napadi na kriptografske sustave i zaštita od njih",
          "lesson": "Napredni napadi na kriptografske sustave ciljaju slabosti u algoritmima, implementaciji ili načinima korištenja kriptografije. Među najpoznatijim napadima su napadi grubom silom, kriptoanaliza, bočni kanali i napadi sudara. Napad grubom silom pokušava isprobati sve moguće ključeve dok ne pronađe ispravan, no moderni algoritmi poput AES-256 imaju toliko velik ključni prostor da je ovakav napad neizvediv. Kriptoanaliza proučava matematičke slabosti algoritama, kao što je diferencijalna i linearna kriptoanaliza za razbijanje simetričnih šifri. Napadi bočnih kanala koriste fizičke informacije, poput vremena izvršavanja ili potrošnje energije, kako bi otkrili tajne ključeve. Napadi sudara iskorištavaju slabosti hash funkcija kako bi pronašli dva različita ulaza s istim hashom, ugrožavajući integritet podataka. Zaštita od ovih napada uključuje korištenje jakih kriptografskih algoritama, sigurne implementacije i dodatne zaštitne mjere poput dodavanja slučajnosti (salt) pri hashiranju lozinki i zaštite od bočnih kanala u hardveru. Razumijevanje ovih napada ključno je za osiguravanje sigurnosti digitalnih sustava i zaštitu osjetljivih podataka u modernom svijetu.",
          "video": "https://example.com/video2",
          "fun_facts": [
            {
              "question": "Kako napadi bočnih kanala mogu otkriti tajne ključeve?",
              "answer": "Napadi bočnih kanala koriste fizičke karakteristike uređaja, poput vremena izvršavanja, potrošnje energije ili elektromagnetskog zračenja, kako bi dobili informacije o tajnim ključevima. Na primjer, ako algoritam za dešifriranje koristi različito vrijeme za obradu različitih ključeva, napadač može analizirati ove varijacije i postupno rekonstruirati ključ. Takvi napadi su posebno opasni kod ugrađenih sustava i pametnih kartica, gdje su fizički pristup i mjerenja mogući."
            },
            {
              "question": "Zašto se napadi sudara smatraju prijetnjom za hash funkcije?",
              "answer": "Napadi sudara iskorištavaju slabosti hash funkcija kako bi pronašli dva različita ulaza koji generiraju isti hash. Ako napadač može stvoriti dokument s istim hashom kao originalni, može ga zamijeniti bez da itko primijeti promjenu. Ovo može ugroziti digitalne potpise i sigurnosne certifikate. SHA-1 je postao nesiguran nakon što su istraživači pokazali praktične sudare, zbog čega se preporučuju sigurniji algoritmi poput SHA-256 ili SHA-3."
            },
            {
              "question": "Kako se zaštititi od napada grubom silom?",
              "answer": "Najbolja zaštita od napada grubom silom je korištenje dugih i složenih ključeva. Na primjer, AES-256 ima toliko velik broj mogućih ključeva da bi napad grubom silom trajao milijarde godina čak i uz najmoćnija računala. Osim toga, sustavi mogu ograničiti broj pokušaja prijave, uvesti dvofaktorsku autentifikaciju i koristiti metode poput PBKDF2, bcrypt ili Argon2 za sigurno hashiranje lozinki kako bi se otežao napad grubom silom."
            },
            {
              "question": "Kako kvantno računanje prijeti kriptografiji?",
              "answer": "Kvantna računala mogu značajno oslabiti klasične kriptografske sustave koristeći algoritme poput Shorovog i Groverovog. Shorov algoritam može faktorizirati velike brojeve eksponencijalno brže od klasičnih računala, što ugrožava RSA i ECC enkripciju. Groverov algoritam može prepoloviti sigurnost simetričnih šifri, što znači da bi AES-256 bio siguran kao AES-128. Zbog ovoga se razvijaju postkvantni kriptografski algoritmi otporni na kvantne napade."
            },
            {
              "question": "Zašto je dodavanje slučajnosti (salta) važno pri hashiranju lozinki?",
              "answer": "Dodavanje slučajne vrijednosti (salta) prije hashiranja lozinke sprječava napade unaprijed izračunatim tablicama (rainbow tables). Bez salta, napadači mogu koristiti unaprijed izračunate hash vrijednosti kako bi brzo razbili lozinke. Kada se svakom hashiranju doda jedinstveni salt, čak i identične lozinke daju različite hashove, čineći takve napade neučinkovitima. Sigurni sustavi koriste metode poput bcrypt, scrypt ili Argon2, koji uključuju salt i iteracije kako bi dodatno otežali razbijanje lozinki."
            }
          ]
        }
      ]
    },
    {
      "id": 2,
      "name": "web sigurnost",
      "levels": [
        {
          "id": 201,
          "name": "Osnove web sigurnosti i uobičajene ranjivosti (OWASP Top 10)",
          "lesson": "Web sigurnost ključna je za zaštitu aplikacija od napada, a OWASP (Open Web Application Security Project) definira deset najkritičnijih ranjivosti. SQL injekcija (SQLi) omogućuje napadačima manipulaciju bazom podataka, što može dovesti do krađe osjetljivih podataka ili potpunog preuzimanja sustava. Cross-Site Scripting (XSS) omogućuje ubacivanje zlonamjernog JavaScript koda u web stranice, što može rezultirati krađom kolačića sesije i korisničkih podataka. Cross-Site Request Forgery (CSRF) iskorištava autentifikaciju korisnika kako bi izvršio neželjene radnje, poput prijenosa novca bez njegovog znanja. \n\nSlaba autentifikacija i upravljanje sesijama mogu dovesti do preuzimanja korisničkih računa. Ako aplikacija ne koristi sigurnu pohranu lozinki ili dvofaktorsku autentifikaciju, napadači mogu lako doći do računa. Nesigurna deserializacija omogućuje izvršavanje proizvoljnog koda kroz manipulaciju podacima. Loše konfigurirane sigurnosne postavke često omogućuju napade, dok nedovoljna zaštita API-ja ostavlja sustav izložen prijetnjama. \n\nImplementacija sigurnosnih mjera poput sanitizacije korisničkog unosa, sigurnog upravljanja sesijama i enkripcije podataka putem HTTPS-a ključna je za zaštitu web aplikacija. Razumijevanje OWASP Top 10 pomaže programerima i sigurnosnim stručnjacima u prepoznavanju prijetnji i poduzimanju potrebnih mjera kako bi zaštitili korisnike i sustave od napada.",
          "video": "https://example.com/video3",
          "fun_facts": [
            {
              "question": "Zašto je SQL injekcija jedna od najopasnijih ranjivosti?",
              "answer": "SQL injekcija omogućuje napadačima da izvršavaju proizvoljne SQL upite na bazi podataka aplikacije. To može dovesti do krađe osjetljivih podataka, mijenjanja sadržaja baze ili čak preuzimanja potpunog nadzora nad sustavom. Ako aplikacija ne sanitizira korisnički unos, jednostavan unos poput ' OR '1'='1 može zaobići autentifikaciju i omogućiti pristup svim korisničkim računima."
            },
            {
              "question": "Kako funkcionira XSS napad?",
              "answer": "Cross-Site Scripting (XSS) napad omogućuje napadaču da ubaci zlonamjerni JavaScript kod u web stranicu, koji se zatim izvršava u pregledniku drugih korisnika. Ovaj napad može se koristiti za krađu kolačića sesije, preusmjeravanje žrtava na phishing stranice ili prikazivanje lažnih sadržaja. Postoje tri glavne vrste XSS-a: reflektirani, pohranjeni i DOM-based XSS."
            },
            {
              "question": "Što je CSRF i kako može biti iskorišten?",
              "answer": "Cross-Site Request Forgery (CSRF) napad prisiljava korisnika da izvrši neželjene radnje na web aplikaciji u kojoj je već prijavljen. Napadač može kreirati zlonamjernu poveznicu koja, kada je korisnik klikne, šalje zahtjev aplikaciji bez njegovog znanja. Na primjer, ako je korisnik prijavljen u online bankarstvo, CSRF napad može izvršiti neautorizirani prijenos novca u ime žrtve."
            },
            {
              "question": "Kako HTTPS štiti od određenih ranjivosti?",
              "answer": "HTTPS (HyperText Transfer Protocol Secure) koristi TLS enkripciju kako bi zaštitio podatke u prijenosu između korisnika i servera. Time se sprječava napade presretanja podataka, poput Man-in-the-Middle (MitM) napada. Osim enkripcije, HTTPS osigurava autentičnost servera pomoću SSL/TLS certifikata, čime se smanjuje rizik od phishing napada i neovlaštenih presretanja osjetljivih informacija."
            },
            {
              "question": "Zašto je upravljanje sesijama važno za sigurnost?",
              "answer": "Nepravilno upravljanje sesijama može omogućiti napadačima krađu korisničkih sesija i preuzimanje računa. Ako aplikacija ne koristi sigurnosne kolačiće, ne postavlja pravilna ograničenja sesije ili ne koristi token za autentifikaciju, napadači mogu iskoristiti napade poput session fixation ili session hijacking. Sigurnosne mjere poput Secure i HttpOnly kolačića, regeneracije sesijskog ID-a i isticanja sesija pomažu u zaštiti korisnika."
            }
          ]
        },
        {
          "id": 202,
          "name": "Sigurnosni propusti u autentifikaciji i upravljanju sesijama",
          "lesson": "Autentifikacija i upravljanje sesijama ključni su aspekti web sigurnosti jer omogućuju korisnicima siguran pristup aplikacijama. Međutim, nepravilna implementacija može dovesti do ozbiljnih ranjivosti poput krađe identiteta, neovlaštenog pristupa i preuzimanja korisničkih računa. Napadači mogu iskoristiti slabe lozinke, ponovnu upotrebu istih zaporki i nedostatak dvofaktorske autentifikacije kako bi preuzeli korisničke račune. \n\nJedan od najčešćih problema je slaba pohrana lozinki. Ako se lozinke ne hashiraju koristeći jake algoritme poput bcrypta ili Argon2, napadači ih mogu lako dešifrirati nakon curenja podataka. Također, ranjivosti poput session hijackinga omogućuju napadačima da ukradu sesijske kolačiće i preuzmu identitet korisnika. Napadi brute force i credential stuffing iskorištavaju slabe lozinke i ponovnu upotrebu istih podataka na više servisa. \n\nSigurno upravljanje sesijama uključuje korištenje sigurnih i kratkotrajnih sesijskih kolačića, regeneraciju sesijskih ID-ova nakon prijave te korištenje HttpOnly i Secure atributa kako bi se spriječilo njihovo presretanje. Implementacija mjera poput dvofaktorske autentifikacije, ograničavanja broja neuspjelih prijava i enkripcije osjetljivih podataka može značajno poboljšati sigurnost sustava. Pravilna provjera identiteta korisnika i sigurno upravljanje autentifikacijskim tokenima ključni su za zaštitu korisničkih računa.",
          "video": "https://example.com/video4",
          "fun_facts": [
            {
              "question": "Zašto je hashiranje lozinki važno?",
              "answer": "Ako lozinke nisu hashirane jakim algoritmima poput bcrypta ili Argon2, napadači ih mogu lako dešifrirati u slučaju curenja podataka. Hashiranje dodaje sloj zaštite, sprječavajući izravno otkrivanje lozinki."
            },
            {
              "question": "Kako funkcionira session hijacking?",
              "answer": "Session hijacking omogućuje napadačima krađu sesijskog kolačića korisnika, čime mogu preuzeti njegovu aktivnu sesiju. Ako kolačići nisu zaštićeni Secure i HttpOnly atributima, napadač ih može presresti putem XSS ili MITM napada."
            },
            {
              "question": "Što je credential stuffing napad?",
              "answer": "Credential stuffing iskorištava činjenicu da mnogi korisnici koriste iste lozinke na više servisa. Napadači koriste ukradene vjerodajnice s jednog servisa kako bi pokušali dobiti pristup drugim korisničkim računima."
            },
            {
              "question": "Kako dvofaktorska autentifikacija povećava sigurnost?",
              "answer": "Dvofaktorska autentifikacija (2FA) dodaje dodatni sloj sigurnosti, tražeći od korisnika da unese dodatni kod uz lozinku. Time se smanjuje mogućnost preuzimanja računa čak i ako je lozinka kompromitirana."
            },
            {
              "question": "Zašto treba ograničiti broj neuspjelih prijava?",
              "answer": "Ograničavanjem neuspjelih prijava može se spriječiti brute-force napade, gdje napadači sustavno pokušavaju razne kombinacije lozinki dok ne pronađu ispravnu."
            }
          ]
        },
        {
          "id": 203,
          "name": "Napadi na web aplikacije i strategije obrane",
          "lesson": "Web aplikacije su česta meta napada zbog svoje dostupnosti i osjetljivih podataka koje obrađuju. Napadači koriste razne tehnike kako bi iskoristili ranjivosti u kodu i infrastrukturi aplikacija. Među najčešćim napadima su SQL injekcija, Cross-Site Scripting (XSS), Cross-Site Request Forgery (CSRF) i Remote Code Execution (RCE). Ovi napadi mogu dovesti do krađe podataka, neovlaštenog pristupa sustavima i kompromitiranja korisnika. \n\nJedna od osnovnih strategija obrane je pravilna validacija i sanitizacija korisničkog unosa kako bi se spriječile injekcije koda. Također, Content Security Policy (CSP) može značajno smanjiti rizik od XSS napada ograničavanjem dopuštenih izvora skripti. Korištenje sigurnih metoda autentifikacije i autorizacije, kao što su OAuth 2.0 i JWT tokeni, može spriječiti neovlašteni pristup. \n\nZaštita web aplikacija također uključuje implementaciju Web Application Firewalla (WAF), enkripciju osjetljivih podataka i redovito ažuriranje softvera. Sigurnosni testovi poput penetracijskog testiranja i automatiziranih sigurnosnih skenera pomažu u prepoznavanju ranjivosti prije nego što ih napadači iskoriste. Kroz kombinaciju sigurnosnih mjera i dobre prakse razvoja, web aplikacije mogu biti zaštićene od širokog spektra prijetnji.",
          "video": "https://example.com/video5",
          "fun_facts": [
            {
              "question": "Kako se SQL injekcija može spriječiti?",
              "answer": "Najbolji način za sprječavanje SQL injekcija je korištenje pripremljenih upita (prepared statements) i ORM sustava, koji osiguravaju da se korisnički unos ne može interpretirati kao SQL naredba."
            },
            {
              "question": "Što je Content Security Policy (CSP) i kako pomaže?",
              "answer": "CSP je sigurnosni mehanizam koji ograničava izvore s kojih se mogu učitavati skripte, slike i druge resurse, čime se smanjuje rizik od XSS napada i drugih sigurnosnih prijetnji."
            },
            {
              "question": "Kako WAF (Web Application Firewall) štiti aplikacije?",
              "answer": "WAF filtrira dolazne HTTP zahtjeve i blokira sumnjive aktivnosti, poput pokušaja eksploatacije ranjivosti, čime štiti web aplikaciju od uobičajenih napada poput SQLi i XSS-a."
            },
            {
              "question": "Zašto je važno redovito ažurirati softver?",
              "answer": "Redovita ažuriranja osiguravaju da su sigurnosni propusti u softveru ispravljeni, čime se smanjuje rizik od napada koji iskorištavaju poznate ranjivosti."
            },
            {
              "question": "Kako penetracijsko testiranje pomaže u sigurnosti?",
              "answer": "Penetracijsko testiranje simulira stvarne napade kako bi se identificirale ranjivosti u sustavu prije nego što ih napadači mogu iskoristiti, omogućujući pravovremene sigurnosne popravke."
            }
          ]
        }
      ]
    },
    {
      "id": 3,
      "name": "digitalna forenzika",
      "levels": [
        {
          "id": 301,
          "name": "Osnove digitalne forenzike i metode prikupljanja dokaza",
          "lesson": "Digitalna forenzika je grana forenzike koja se bavi identifikacijom, prikupljanjem, analizom i očuvanjem digitalnih dokaza u svrhu istrage cyber kriminala. Ključna načela digitalne forenzike uključuju očuvanje integriteta dokaza, dokumentiranje postupaka i ponovljivost analize kako bi se dokazi mogli koristiti na sudu. Prikupljanje dokaza mora se provoditi pažljivo kako bi se izbjeglo njihovo oštećenje ili izmjena. \n\nPostoje različite vrste digitalne forenzike, uključujući forenziku računala, mreže, mobilnih uređaja i cloud sustava. Analiza podataka s tvrdih diskova uključuje prepoznavanje izbrisanih datoteka, pretragu skrivenih informacija i analizu metapodataka. Forenzički alati poput Autopsy, FTK Imager i EnCase omogućuju istražiteljima rad s diskovnim slikama i analizom datotečnih sustava. Prilikom prikupljanja dokaza, koristi se metoda 'write-blocking' kako bi se spriječilo nenamjerno mijenjanje podataka. \n\nOsim tehničkih aspekata, digitalni forenzičari moraju slijediti zakonske i etičke smjernice kako bi osigurali valjanost dokaza. Dokumentiranje svih koraka istrage omogućava ponovnu provjeru nalaza i sprječava neovlaštene manipulacije podacima. Razumijevanje osnovnih principa digitalne forenzike ključno je za uspješnu analizu i izgradnju jakih dokaza u istragama cyber kriminala.",
          "video": "https://example.com/video6",
          "fun_facts": [
            {
              "question": "Zašto je integritet digitalnih dokaza ključan u forenzici?",
              "answer": "Integritet digitalnih dokaza osigurava se kako bi se spriječile manipulacije i osigurala njihova valjanost u sudskom postupku. Ako dokaz bude promijenjen, čak i nehotice, njegova vjerodostojnost može biti dovedena u pitanje. Zbog toga se koriste hash funkcije poput SHA-256 kako bi se osiguralo da podaci nisu mijenjani tijekom istrage."
            },
            {
              "question": "Kako digitalni forenzičari pronalaze izbrisane podatke?",
              "answer": "Kada korisnik izbriše datoteku, ona često nije odmah trajno uklonjena s diska, već samo označena kao nevidljiva za operativni sustav. Digitalni forenzičari koriste alate poput Autopsy i FTK Imager za rekonstrukciju izbrisanih podataka analizirajući slobodni prostor na disku i zapisivanje metapodataka datoteka kako bi ih ponovno vratili."
            },
            {
              "question": "Što je ‘write-blocking’ i zašto je važan?",
              "answer": "‘Write-blocking’ je tehnika koja sprječava bilo kakve promjene na digitalnim dokazima tijekom forenzičke analize. Korištenjem hardverskih ili softverskih write-blockera osigurava se da podaci ostaju nepromijenjeni, čime se sprječava nenamjerno oštećenje dokaza i osigurava njihova vjerodostojnost prilikom analize."
            },
            {
              "question": "Kako se digitalni forenzičari nose s enkriptiranim podacima?",
              "answer": "Enkripcija može otežati pristup digitalnim dokazima, ali forenzičari koriste razne metode za dešifriranje. To uključuje analiziranje memorije računala za pronalaženje enkripcijskih ključeva, napade grubom silom na lozinke ili iskorištavanje slabosti u enkripcijskim algoritmima. U nekim slučajevima, forenzičari mogu koristiti pravne metode kako bi prisilili osumnjičenog da preda enkripcijske ključeve."
            },
            {
              "question": "Koji su najčešće korišteni alati u digitalnoj forenzici?",
              "answer": "Najčešće korišteni alati uključuju Autopsy i The Sleuth Kit za analizu diskova, FTK Imager za rad s diskovnim slikama, EnCase za dubinsku analizu datotečnih sustava i Wireshark za analizu mrežnog prometa. Svaki od ovih alata omogućuje forenzičarima prikupljanje i analizu digitalnih dokaza na način koji čuva njihovu vjerodostojnost."
            }
          ]
        },
        {
          "id": 302,
          "name": "Analiza datoteka, skrivenih podataka i steganografije",
          "lesson": "Analiza datoteka je ključni dio digitalne forenzike, jer napadači često skrivaju podatke unutar različitih formata kako bi izbjegli otkrivanje. Skriveni podaci mogu biti smješteni u metapodacima, unutar neiskorištenih dijelova datoteke ili čak u drugim formatima pomoću tehnika steganografije. \n\nSteganografija je metoda skrivanja informacija unutar digitalnih medija, poput slika, zvučnih zapisa ili čak videozapisa. Za razliku od enkripcije, gdje su podaci vidljivo šifrirani, steganografija omogućuje da podaci ostanu neprimijećeni. Primjerice, napadač može sakriti tekstualnu poruku unutar piksela slike tako da ljudsko oko ne primijeti razliku. \n\nForenzičari koriste razne alate za otkrivanje skrivenih podataka, uključujući binarnu analizu datoteka, provjeru hash vrijednosti i alate za detekciju steganografije. Najpoznatiji alati uključuju StegExpose za otkrivanje skrivene informacije u slikama, ExifTool za analizu metapodataka i binarne editore poput HxD za ručno pregledavanje strukture datoteke. Kroz temeljitu analizu forenzičari mogu pronaći skrivene podatke i rekonstruirati informacije koje su napadači pokušali sakriti.",
          "video": "https://example.com/video8",
          "fun_facts": [
            {
              "question": "Kako se steganografija razlikuje od enkripcije?",
              "answer": "Steganografija skriva postojanje podataka unutar drugog medija, poput slike ili zvuka, dok enkripcija pretvara podatke u nečitljiv format pomoću matematičkih algoritama. Glavna prednost steganografije je da skriva samu činjenicu da podaci postoje, što je čini korisnom za tajnu komunikaciju."
            },
            {
              "question": "Koje metode se koriste za skrivanje podataka unutar slika?",
              "answer": "Najčešća metoda skrivanja podataka u slikama je Least Significant Bit (LSB) tehnika, gdje se najmanje značajni bitovi piksela zamjenjuju bitovima skrivenih podataka. Na taj način, promjene su toliko male da ljudsko oko ne može primijetiti razliku, ali računalo može izvući skrivene informacije."
            },
            {
              "question": "Kako se otkrivaju skriveni podaci u slikama?",
              "answer": "Forenzičari koriste alate poput StegExpose i OpenStego za otkrivanje anomalija u slikovnim datotekama. Također, histogram analiza i provjera RGB distribucije mogu otkriti neuobičajene promjene koje ukazuju na skrivene podatke. Analiza razlika između originalne i modificirane slike također može pomoći u identifikaciji steganografskih tehnika."
            },
            {
              "question": "Što su metapodaci i kako mogu sadržavati skrivene informacije?",
              "answer": "Metapodaci su podaci o podacima, poput vremena kreiranja datoteke, korištenog uređaja i lokacije snimanja. Napadači mogu iskoristiti metapodatke za skrivanje tajnih informacija unutar slika, dokumenata ili drugih datoteka. ExifTool je jedan od najpoznatijih alata koji omogućuje analizu i izmjenu metapodataka."
            },
            {
              "question": "Može li se steganografija koristiti u audio datotekama?",
              "answer": "Da, steganografija se može primijeniti na audio datoteke pomoću metoda poput Echo Hiding i Phase Coding, gdje se skriveni podaci ugrađuju u neslušljive dijelove zvuka. Na ovaj način, napadači mogu prenijeti tajne informacije kroz audio datoteke bez izazivanja sumnje kod slušatelja."
            }
          ]
        },
        {
          "id": 303,
          "name": "Forenzika mrežnog prometa i analiza zlonamjernog softvera",
          "lesson": "Forenzika mrežnog prometa igra ključnu ulogu u otkrivanju cyber napada, analiziranju neovlaštenih aktivnosti i praćenju komunikacije unutar mreža. Ova disciplina koristi mrežne snimke (packet capture) kako bi identificirala sumnjive obrasce prometa, neobične zahtjeve prema serverima i moguće podatkovne curenja. Najčešće korišteni alat u analizi mrežnog prometa je Wireshark, koji omogućuje istraživačima pregled paketa, filtriranje podataka i otkrivanje zlonamjernih aktivnosti.\n\nAnaliza zlonamjernog softvera (malware forenzika) fokusira se na prepoznavanje, dekompilaciju i analizu zloćudnih programa. Ova analiza može biti statička, gdje se istražuju binarni podaci malicioznog koda bez njegovog pokretanja, ili dinamička, gdje se malware izvodi u kontroliranom okruženju poput sandboxa kako bi se promatrale njegove aktivnosti. \n\nZa analizu malwarea koriste se alati poput IDA Pro za dekompilaciju, Ghidra za reverzni inženjering te VirusTotal za provjeru poznatih prijetnji. Ključni cilj malware forenzike je razumjeti kako zlonamjerni programi rade, otkriti njihove ciljeve i razviti metode zaštite. Kombiniranjem mrežne forenzike i analize malwarea, istražitelji mogu učinkovito identificirati prijetnje i spriječiti daljnje napade.",
          "video": "https://example.com/video9",
          "fun_facts": [
            {
              "question": "Kako se može analizirati mrežni promet u stvarnom vremenu?",
              "answer": "Za analizu mrežnog prometa u stvarnom vremenu koristi se Wireshark, koji omogućuje hvatanje i pregled mrežnih paketa. Korisnici mogu filtrirati promet prema protokolima, IP adresama ili specifičnim ključnim riječima kako bi pronašli sumnjive aktivnosti. Analizom HTTP zahtjeva i DNS upita može se identificirati moguće napade i curenje podataka."
            },
            {
              "question": "Koja je razlika između statičke i dinamičke analize malwarea?",
              "answer": "Statička analiza malwarea proučava binarni kod bez njegovog pokretanja, koristeći alate za dekompilaciju kako bi istražila funkcije i moguće zlonamjerne namjere. Dinamička analiza, s druge strane, uključuje pokretanje malwarea u sandbox okruženju kako bi se promatrala njegova aktivnost, uključujući mrežne veze, promjene u registru i pokušaje eksfiltracije podataka."
            },
            {
              "question": "Kako napadači koriste ‘command and control’ (C2) poslužitelje?",
              "answer": "Napadači koriste C2 poslužitelje za upravljanje kompromitiranim uređajima i slanje naredbi zlonamjernom softveru. Zombirani sustavi (botovi) mogu primati instrukcije o krađi podataka, izvođenju DDoS napada ili širenju malwarea. Forenzičari prate C2 komunikaciju analizirajući sumnjive mrežne konekcije i blokirajući poznate C2 domene."
            },
            {
              "question": "Zašto je analiza malwarea u sandboxu važna?",
              "answer": "Sandboxing omogućuje istraživačima pokretanje sumnjivih programa u izoliranom okruženju bez opasnosti od širenja infekcije. To omogućuje detaljnu analizu ponašanja malwarea, uključujući otkrivanje njegovih mrežnih aktivnosti, promjena u sustavu i pokušaja eskalacije privilegija, što pomaže u razvoju sigurnosnih rješenja."
            },
            {
              "question": "Kako forenzičari otkrivaju ‘fileless’ malware napade?",
              "answer": "‘Fileless’ malware ne ostavlja tragove na disku, već se izvršava iz memorije, što otežava detekciju klasičnim antivirusnim alatima. Forenzičari koriste napredne metode analize memorije pomoću alata poput Volatility kako bi identificirali neobične procese, sumnjive skripte u RAM-u i neovlaštene mrežne konekcije koje ukazuju na prisutnost ‘fileless’ prijetnji."
            }
          ]
        }
      ]
    },
    {
      "id": 4,
      "name": "mrežna sigurnost",
      "levels": [
        {
          "id": 401,
          "name": "Osnove mrežnih protokola i analiza prometa",
          "lesson": "Razumijevanje mrežnih protokola ključno je za analizu mrežnog prometa i prepoznavanje potencijalnih prijetnji. Osnovni mrežni protokoli uključuju TCP/IP, HTTP, HTTPS, DNS, DHCP i ICMP, a svaki od njih ima specifičnu ulogu u komunikaciji između uređaja. Napadači često iskorištavaju ranjivosti u ovim protokolima za izvođenje napada, poput DNS spoofinga ili ARP trovanja.\n\nAnaliza mrežnog prometa omogućuje prepoznavanje neovlaštenih aktivnosti i otkrivanje sumnjivih obrazaca. Najčešće korišten alat za ovu svrhu je Wireshark, koji omogućuje snimanje i analizu mrežnih paketa u stvarnom vremenu. Pomoću Wiresharka moguće je filtrirati promet, analizirati zaglavlja paketa i identificirati potencijalne prijetnje, poput nešifriranih lozinki ili neobičnih DNS zahtjeva.\n\nZa učinkovitu analizu mrežnog prometa potrebno je razumjeti kako podaci putuju kroz mrežu, uključujući OSI model i njegovih sedam slojeva. Svaki sloj igra ulogu u prijenosu podataka, a napadači često ciljaju specifične slojeve kako bi kompromitirali sigurnost sustava. Kroz ovu lekciju, natjecatelji će steći temeljno znanje o mrežnim protokolima i naučiti koristiti alate za praćenje mrežnog prometa u CTF natjecanjima.",
          "video": "https://example.com/video10",
          "fun_facts": [
            {
              "question": "Zašto je važno razumjeti TCP/IP protokol u mrežnoj sigurnosti?",
              "answer": "TCP/IP je temelj internetske komunikacije, a napadači često iskorištavaju njegove ranjivosti za izvođenje napada, poput TCP SYN floodinga ili IP spoofinga. Razumijevanje kako TCP/IP radi omogućuje sigurnosnim istraživačima da prepoznaju anomalije u prometu i blokiraju zlonamjerne aktivnosti."
            },
            {
              "question": "Kako Wireshark pomaže u mrežnoj analizi?",
              "answer": "Wireshark omogućuje hvatanje i analizu mrežnih paketa u stvarnom vremenu. Korisnici mogu filtrirati pakete prema protokolima, IP adresama ili određenim sadržajima, što olakšava otkrivanje nešifriranih lozinki, sumnjivih veza i drugih sigurnosnih prijetnji."
            },
            {
              "question": "Što je DNS spoofing i kako se može prepoznati?",
              "answer": "DNS spoofing je napad u kojem napadač mijenja DNS odgovore kako bi preusmjerio žrtvu na lažne web stranice. Može se prepoznati analizom DNS prometa u alatima poput Wiresharka, gdje neuobičajeni odgovori ili IP adrese koje ne odgovaraju legitimnim serverima ukazuju na moguću manipulaciju."
            },
            {
              "question": "Koja je uloga OSI modela u mrežnoj sigurnosti?",
              "answer": "OSI model pomaže razumjeti kako se podaci prenose kroz mrežu i koje slojeve napadači mogu iskoristiti. Na primjer, DDoS napadi često ciljaju mrežni sloj (Layer 3), dok su aplikacijski napadi poput SQL injectiona usmjereni na sloj aplikacije (Layer 7)."
            },
            {
              "question": "Kako se može zaštititi mrežni promet od presretanja?",
              "answer": "Šifriranje prometa pomoću HTTPS-a, VPN-a ili TLS-a sprječava neovlašteni pristup podacima tijekom prijenosa. Također, korištenje sigurnih protokola poput SSH umjesto Telnet-a i redovito nadgledanje mrežnog prometa mogu pomoći u detekciji i prevenciji napada."
            }
          ]
        },
        {
          "id": 402,
          "name": "Napadi na mreže: sniffing, spoofing i MITM",
          "lesson": "Napadi na mreže koriste različite tehnike za presretanje, manipulaciju ili preusmjeravanje mrežnog prometa. Među najčešćima su sniffing, spoofing i napadi čovjeka u sredini (MITM - Man-in-the-Middle).\n\nSniffing je tehnika prisluškivanja mrežnog prometa, gdje napadači koriste alate poput Wiresharka ili tcpdumpa za presretanje nešifriranih podataka. To omogućuje krađu osjetljivih informacija poput lozinki, sesijskih kolačića i podataka o korisnicima.\n\nSpoofing napadi uključuju lažiranje identiteta kako bi napadač prevario mrežu ili korisnike. ARP spoofing omogućuje napadaču da preusmjeri promet na svoj uređaj, dok IP spoofing omogućuje slanje lažnih paketa koji se čine kao da dolaze iz pouzdanog izvora.\n\nMITM napadi kombiniraju sniffing i spoofing kako bi napadač postao posrednik u komunikaciji između dviju strana, neprimjetno presrećući i mijenjajući podatke. Ovi napadi mogu se izvoditi pomoću rogue access pointa, SSL strippinga ili proxy servera.\n\nZa zaštitu od ovih prijetnji koriste se enkripcija, autentifikacija i detekcijski alati poput ARP watchera i IDS/IPS sustava. Razumijevanje ovih napada ključno je za prepoznavanje i obranu tijekom CTF natjecanja.",
          "video": "https://example.com/video11",
          "fun_facts": [
            {
              "question": "Kako napadači mogu presresti mrežni promet?",
              "answer": "Napadači koriste alate poput Wiresharka i tcpdumpa za sniffing mrežnog prometa. Ako je promet nešifriran, mogu presresti osjetljive informacije poput lozinki i kolačića sesije, što im omogućuje neovlašteni pristup korisničkim računima."
            },
            {
              "question": "Kako funkcionira ARP spoofing?",
              "answer": "ARP spoofing je tehnika u kojoj napadač šalje lažne ARP odgovore kako bi preusmjerio mrežni promet kroz svoj uređaj. Na taj način može presretati, mijenjati ili blokirati podatke koji prolaze kroz mrežu, što se često koristi u MITM napadima."
            },
            {
              "question": "Što je SSL stripping i kako ugrožava sigurnost?",
              "answer": "SSL stripping napad prisiljava korisnika da koristi HTTP umjesto HTTPS-a, omogućujući napadaču presretanje nešifriranih podataka. To se postiže uklanjanjem sigurnosnih preusmjeravanja u mrežnom prometu kako bi korisnici nesvjesno koristili nezaštićene veze."
            },
            {
              "question": "Koje metode se koriste za zaštitu od MITM napada?",
              "answer": "Najbolje metode zaštite uključuju korištenje HTTPS-a, VPN-a i enkripcije podataka. Također, alati poput ARP watchera mogu detektirati ARP spoofing, a IDS/IPS sustavi pomažu u ranom otkrivanju sumnjivih aktivnosti u mreži."
            },
            {
              "question": "Kako napadači koriste rogue access point?",
              "answer": "Napadači postavljaju lažni Wi-Fi hotspot s nazivom sličnim legitimnom, a kada se korisnici spoje, sav njihov promet prolazi kroz napadačev uređaj. To omogućuje presretanje lozinki, kreditnih kartica i drugih osjetljivih podataka."
            }
          ]
        },
        {
          "id": 403,
          "name": "Zaštita mreža: enkripcija, firewalli i IDS/IPS sustavi",
          "lesson": "Zaštita mreža ključna je za sprječavanje cyber napada i očuvanje sigurnosti podataka. Tri glavne metode obrane uključuju enkripciju podataka, korištenje firewall-a te detekcijske i prevencijske sustave (IDS/IPS). \n\nEnkripcija osigurava da podaci ostanu sigurni čak i ako ih napadači presretnu. Protokoli poput TLS/SSL omogućuju siguran prijenos podataka putem interneta, dok VPN enkripcija štiti komunikaciju na nesigurnim mrežama. Korištenjem jakih enkripcijskih algoritama poput AES-256, podaci postaju nečitljivi bez odgovarajućeg ključa.\n\nFirewalli (vatrozidi) predstavljaju prvu liniju obrane mreže filtriranjem prometa prema definiranim pravilima. Postoje hardverski i softverski firewalli koji kontroliraju dolazne i odlazne pakete, blokirajući sumnjive ili neovlaštene zahtjeve. Napredni firewalli mogu analizirati aplikacijski promet i spriječiti složene napade.\n\nIDS (Intrusion Detection System) i IPS (Intrusion Prevention System) sustavi koriste se za otkrivanje i prevenciju sumnjivih aktivnosti. IDS nadzire mrežni promet i obavještava administratore o mogućim napadima, dok IPS aktivno blokira prijetnje. Ovi sustavi koriste potpisnu i heurističku analizu kako bi prepoznali poznate i nepoznate napade.\n\nU kombinaciji, enkripcija, firewalli i IDS/IPS sustavi omogućuju snažnu zaštitu mreža od prijetnji, smanjujući rizik od napada i osiguravajući sigurnu komunikaciju.",
          "video": "https://example.com/video12",
          "fun_facts": [
            {
              "question": "Kako enkripcija štiti podatke tijekom prijenosa?",
              "answer": "Enkripcija osigurava da podaci budu nečitljivi bilo kome osim ovlaštenim primateljima. Kada korisnik šalje osjetljive informacije putem HTTPS-a, protokol koristi TLS (Transport Layer Security) kako bi osigurao siguran prijenos podataka. Algoritmi poput AES-256 osiguravaju da čak i ako napadač presretne promet, neće moći dešifrirati sadržaj bez odgovarajućeg ključa. Ova metoda štiti lozinke, bankovne podatke i druge povjerljive informacije od prisluškivanja."
            },
            {
              "question": "Koja je razlika između hardverskog i softverskog firewall-a?",
              "answer": "Hardverski firewalli su fizički uređaji koji filtriraju mrežni promet prije nego što dosegne interne sustave. Često se koriste u poduzećima i podatkovnim centrima za zaštitu cijelih mreža. Softverski firewalli, s druge strane, instalirani su na pojedinačnim računalima i kontroliraju promet na nivou uređaja. Oni omogućuju prilagodljiva pravila za aplikacije i procese, ali ovise o resursima uređaja na kojem su pokrenuti. Oba tipa firewalla zajedno pružaju snažniju zaštitu."
            },
            {
              "question": "Kako IDS i IPS sustavi prepoznaju prijetnje?",
              "answer": "IDS (Intrusion Detection System) i IPS (Intrusion Prevention System) koriste dvije glavne metode za otkrivanje prijetnji: potpisnu i heurističku analizu. Potpisna analiza uspoređuje dolazni promet s bazom poznatih napada, prepoznajući prijetnje poput SQL injekcija ili DDoS napada. Heuristička analiza prati neuobičajene obrasce ponašanja, što omogućuje detekciju novih i nepoznatih napada. IDS sustavi samo obavještavaju administratore o prijetnjama, dok IPS sustavi aktivno blokiraju zlonamjerne zahtjeve prije nego što stignu do cilja."
            },
            {
              "question": "Zašto je VPN važan za sigurnu mrežnu komunikaciju?",
              "answer": "VPN (Virtual Private Network) šifrira podatke prije nego što napuste uređaj korisnika, osiguravajući sigurnu komunikaciju čak i na nesigurnim mrežama poput javnih Wi-Fi hotspotova. Kada se korisnik spoji na VPN, njegov promet se tunelira kroz šifriranu vezu do udaljenog servera, skrivajući njegovu stvarnu IP adresu i otežavajući napadačima presretanje osjetljivih informacija. VPN je posebno koristan za zaštitu privatnosti i siguran pristup korporativnim mrežama."
            },
            {
              "question": "Kako firewalli filtriraju mrežni promet i sprječavaju napade?",
              "answer": "Firewalli analiziraju mrežne pakete i odlučuju hoće li ih propustiti ili blokirati na temelju unaprijed definiranih pravila. Na primjer, mogu blokirati dolazne veze s poznatih zlonamjernih IP adresa ili spriječiti neovlaštene pokušaje pristupa internim serverima. Napredni firewalli, poput Next-Generation Firewall (NGFW) sustava, mogu analizirati aplikacijski promet i prepoznati prijetnje na temelju ponašanja, sprječavajući složenije napade poput Command and Control (C2) komunikacija zlonamjernog softvera."
            }
          ]
        }
      ]
    },
    {
      "id": 5,
      "name": "reverzno inženjerstvo",
      "levels": [
        {
          "id": 501,
          "name": "Osnove reverznog inženjerstva: disassembleri, decompileri i debugging",
          "lesson": "Reverzno inženjerstvo je postupak analize softvera bez izvornog koda kako bi se razumjela njegova funkcionalnost, otkrile ranjivosti ili kreirale zakrpe. Koristi se u sigurnosnim istraživanjima, analizi zlonamjernog softvera, razbijanju softverskih ograničenja i čak u legalnim sigurnosnim revizijama. Osnovni alati koji se koriste u ovom procesu su disassembleri, decompileri i debuggers.\n\nDisassembleri, poput IDA Pro i Radare2, prevode binarni kod u asembler, omogućujući analizu niskorazinske strukture programa. Ovi alati su neophodni za istraživanje funkcija unutar izvršnih datoteka, što omogućuje analizu ponašanja softvera bez njegovog pokretanja. \n\nDecompileri, poput Ghidre i RetDec-a, idu korak dalje i pokušavaju rekonstruirati izvorni kod iz binarnih datoteka. Iako ovaj proces nije savršen zbog optimizacija kompajlera i gubitka originalnih struktura, decompilacija može olakšati razumijevanje složenih algoritama unutar aplikacije. \n\nDebugging je ključna tehnika koja omogućuje praćenje rada programa u stvarnom vremenu. Alati poput GDB-a, x64dbg-a i WinDbg-a omogućuju zaustavljanje programa na određenim točkama (breakpoints), inspekciju memorije, registrara i manipulaciju izvršnim tokom. Ova metoda je posebno korisna za otkrivanje ranjivosti i bypassiranje zaštitnih mehanizama.\n\nJedan od ključnih izazova u reverznom inženjerstvu su zaštitne tehnike koje programi koriste kako bi otežali analizu. Anti-debugging metode, packeri koji kompresiraju ili šifriraju izvršne datoteke te obfuskacija koda često sprječavaju klasične metode analize. Kombinacijom statičke (disassembling, decompiling) i dinamičke analize (debugging, monitoring runtime ponašanja), moguće je zaobići te prepreke i dobiti bolji uvid u funkcionalnost softvera.",
          "video": "https://www.youtube.com/watch?v=6sM6sB2Xj6M",
          "fun_facts": [
            {
              "question": "Što je disassembler i kako pomaže u reverznom inženjerstvu?",
              "answer": "Disassembler je alat koji prevodi binarni kod u asembler, čineći ga čitljivijim za analizu. Alati poput IDA Pro i Radare2 omogućuju istraživanje strukture izvršnih datoteka, identifikaciju funkcija i razumijevanje niskorazinskog ponašanja programa. Bez disassemblera, analiza binarnih datoteka bila bi znatno teža jer bi se programer suočavao s nečitljivim nizovima bajtova."
            },
            {
              "question": "Koja je razlika između disassemblera i decompilera?",
              "answer": "Disassembler prevodi binarni kod u asembler, dok decompiler pokušava rekonstruirati viši programski kod (npr. C ili C++) iz binarne datoteke. Decompilacija može olakšati razumijevanje složenih algoritama, ali nije uvijek potpuno točna zbog optimizacija kompajlera i gubitka originalnih struktura koda. Stoga se u reverznom inženjerstvu često koriste oba alata zajedno."
            },
            {
              "question": "Kako debugging pomaže u analizi softvera?",
              "answer": "Debugging omogućuje pokretanje programa korak po korak, zaustavljanje na određenim točkama (breakpoints) i analizu registara i memorije u stvarnom vremenu. Alati poput GDB-a, x64dbg-a i WinDbg-a pomažu istražiti ponašanje softvera, identificirati ranjivosti i čak modificirati izvršni kod u letu. Ova tehnika se često koristi za zaobilaženje zaštitnih mehanizama i razumijevanje kako program obrađuje ulazne podatke."
            },
            {
              "question": "Zašto je IDA Pro jedan od najpoznatijih alata za reverzno inženjerstvo?",
              "answer": "IDA Pro je moćan disassembler koji omogućuje statičku analizu binarnih datoteka s interaktivnim grafičkim sučeljem. Osim disassembla, IDA Pro podržava osnovnu dekompilaciju i skriptiranje za automatizaciju analize. Iako postoje besplatne alternative poput Ghidre i Radare2, IDA Pro je često izbor profesionalaca zbog svoje preciznosti i dodatnih značajki poput pluginova za detekciju zaštitnih mehanizama."
            },
            {
              "question": "Koje su najčešće prepreke u reverznom inženjerstvu?",
              "answer": "Programi često koriste zaštitne mehanizme poput anti-debugging tehnika, obfuskacije koda i packera koji kompresiraju ili šifriraju izvršne datoteke. Ove metode otežavaju analizu disassemblera i decompilera. Reverzni inženjeri koriste dinamičku analizu, manualnu rekonstrukciju koda i specijalizirane alate poput Unpacker-a za zaobilaženje takvih prepreka i dobivanje originalnog binarnog koda."
            }
          ]
        },
        {
          "id": 502,
          "name": "Analiza binarnih izvršnih datoteka i detekcija zaštitnih mehanizama",
          "lesson": "Analiza binarnih izvršnih datoteka je ključna u reverznom inženjerstvu i CTF natjecanjima. Statička analiza podrazumijeva razgradnju binarnog koda uz pomoć disassemblera poput IDA Pro, Ghidra ili Radare2. Ovi alati omogućuju pregled asembler koda, koji se koristi za razumijevanje funkcionalnosti aplikacija. Korištenje decompilera može pomoći u rekonstrukciji izvorne funkcionalnosti aplikacije. Dinamička analiza uključuje praćenje izvršavanja programa u stvarnom vremenu koristeći alate za debugging kao što su GDB ili x64dbg. Ovi alati omogućuju praćenje tokova izvršenja i praćenje promjena u memoriji, registrima i podacima tijekom rada programa.\n\nZaštitni mehanizmi kao što su obfuskacija koda, packeri i anti-debugging tehnike koriste se kako bi spriječili analizu programa. Obfuskacija mijenja strukturu koda na način koji otežava njegovo razumijevanje, dok packeri komprimiraju datoteke kako bi ih učinili nečitljivima dok se ne dekomprimiraju tijekom izvršenja. Anti-debugging tehnike detektiraju kada je program podložan analizi ili debugiranju i ometaju rad alata poput debuggerskih sustava. Kako bi uspješno analizirali takve zaštićene datoteke, istraživači koriste specifične tehnike za zaobilaženje ovih zaštita.\n\nU kontekstu CTF natjecanja, analitičari koriste ove metode kako bi otkrili skrivene podatke, zastavice ili ranjivosti u binarnim datotekama. Svaka analiza zahtijeva razumijevanje specifičnih alata i tehnika te sposobnost za zaobilaženje zaštitnih mehanizama, što je ključ za uspješan napad ili rješenje izazova u CTF-u. Uz pomoć tih alata, istraživači mogu dobiti uvid u aplikacije i pronaći skrivene informacije koje su neophodne za napredne izazove CTF natjecanja.",
          "video": "https://www.youtube.com/watch?v=Jfojz2i25bA",
          "fun_facts": [
            {
              "question": "Koje su glavne vrste zaštitnih mehanizama u binarnim izvršnim datotekama?",
              "answer": "Binarne izvršne datoteke često koriste nekoliko vrsta zaštite: obfuskaciju koda, anti-debugging tehnike, i packere. Obfuskacija mijenja strukturu koda kako bi bila nečitljiva analitičarima, dok packeri komprimiraju ili šifriraju datoteke, čineći ih nečitljivima dok se ne dekomprimiraju. Anti-debugging tehnike detektiraju alate za debugiranje i sprječavaju njihovo korištenje, ometajući analizu programa."
            },
            {
              "question": "Što je obfuskacija koda i kako se koristi u zaštiti?",
              "answer": "Obfuskacija koda je tehnika koja mijenja izvorni kod na način da ga učini teškim za razumjeti i analizirati, ali ne mijenja njegovu funkcionalnost. Ova metoda se koristi za zaštitu intelektualnog vlasništva i sprječavanje reverznog inženjerstva. Obfuskirani kod može biti teže analizirati jer se kontrolne strukture, varijable i funkcije preimenuju u nasumične nazive, čineći kod neprepoznatljivim."
            },
            {
              "question": "Koja je uloga packera u zaštiti binarnih datoteka?",
              "answer": "Packer je alat koji komprimira izvršne datoteke kako bi ih učinio nečitljivima. Datoteke se 'pakiraju' u komprimirani format koji se mora dekomprimirati tijekom izvršenja. To otežava analizu jer nekomprimirane datoteke nisu dostupne za direktnu analizu. Packer se koristi za skrivanje stvarnog koda, a istraživači moraju koristiti odgovarajuće alate za dekompresiju i analizu pakiranih datoteka."
            },
            {
              "question": "Kako debugging pomaže u analizi binarnih datoteka?",
              "answer": "Debugging omogućuje dinamičku analizu binarnih datoteka. Korištenjem alata poput GDB-a, analitičar može pratiti izvršavanje programa, zaustaviti ga na određenim točkama (breakpoints) i istražiti memoriju, registre i promjene u ponašanju programa u stvarnom vremenu. Ovaj proces pomaže u pronalaženju grešaka, ranjivosti i skrivenih funkcionalnosti koje mogu biti korisne za napad ili analizu."
            },
            {
              "question": "Koji su alati najkorisniji za analizu binarnih datoteka?",
              "answer": "Alati kao što su IDA Pro, Ghidra i Radare2 koriste se za statičku analizu binarnih datoteka. IDA Pro i Radare2 su disassembleri koji prevode binarni kod u asembler, dok Ghidra omogućuje i dekompilaciju i analizu viših razina koda. Za dinamičku analizu koriste se alati poput GDB-a i x64dbg-a koji omogućuju praćenje izvršavanja programa i inspekciju memorije u stvarnom vremenu."
            }
          ]
        },
        {
          "id": 503,
          "name": "Tehnike zaobilaženja zaštita i obfuscation u reverznom inženjerstvu",
          "lesson": "Tehnike zaobilaženja zaštita i obfuscation ključne su u reverznom inženjerstvu, osobito kada se suočavate s naprednim zaštitnim mehanizmima u CTF natjecanjima. Obfuskacija koda je jedna od najučinkovitijih zaštita koja mijenja izgled koda, čineći ga teškim za analizu. Uključuje preimenovanje varijabli, funkcija i metoda u nasumične nazive, komplicirajući razumijevanje stvarne funkcionalnosti. Osim toga, obfuskacija može dodati beskorisne instrukcije u kod, kako bi se još više otežalo reverzno inženjerstvo. Za obnavljanje funkcionalnosti obfuskiranih aplikacija koriste se posebni alati, kao što su deobfuscators ili tehnike praćenja izvršnog toka programa.\n\nPored obfuskacije, packeri su drugi oblik zaštite koji komprimira binarne datoteke. Packer koristi algoritme za kompresiju, čineći izvršne datoteke nečitljivima dok se ne dekomprimiraju u memoriji tijekom izvršenja. Ova zaštita komplicira analizu jer istraživači moraju prvo dekomprimirati datoteku prije nego što je mogu analizirati. Da bi se zaobišli packeri, istraživači koriste alate za statičku analizu i praćenje programa u stvarnom vremenu.\n\nAnti-debugging tehnike sprječavaju korištenje alata za debugiranje, detektirajući kada se program pokreće unutar debuggerskog okruženja. Moguće je koristiti tehnike kao što su 'timing attacks' ili detekcija posebnih instrumenata (npr. GDB ili OllyDbg). Za uspješno zaobilaženje ovih tehnika, istraživači često koriste virtualizaciju, hardware debugging, ili modificiraju okolinu pokretanja programa. Ove tehnike omogućuju izvođenje programa unutar okruženja u kojem je teško otkriti analitičara. Sve ove metode omogućuju istraživačima da zaobiđu zaštite, što je od suštinskog značaja u procesu pronalaženja ranjivosti ili skrivene zastavice.",
          "video": "https://www.youtube.com/watch?v=Jfojz2i25bA",
          "fun_facts": [
            {
              "question": "Što je obfuskacija koda i kako se koristi u zaštiti?",
              "answer": "Obfuskacija koda koristi se za skrivanje stvarne funkcionalnosti programa preimenovanjem varijabli, funkcija i metoda u nasumične nazive. Ova tehnika otežava razumijevanje koda i povećava složenost analize. Korištenjem deobfuscators alata moguće je obrnuti obfuskaciju i rekonstruirati izvorni kod."
            },
            {
              "question": "Kako packeri utječu na reverzno inženjerstvo?",
              "answer": "Packer koristi kompresijske algoritme za smanjenje veličine izvršnih datoteka i otežava analizu jer je datoteka nečitljiva dok se ne dekomprimira u memoriji. Analitičari moraju dekomprimirati datoteku koristeći specijalizirane alate kako bi nastavili s analizom."
            },
            {
              "question": "Što je anti-debugging i kako se može zaobići?",
              "answer": "Anti-debugging tehnike detektiraju alate za debuggiranje i onemogućuju analizu programa u realnom vremenu. Da bi se zaobišle, istraživači koriste virtualizaciju, modificiraju okruženje pokretanja ili koriste hardverske debugerske alate koji nisu prepoznatljivi od strane programa."
            },
            {
              "question": "Zašto se koristi virtualizacija u zaobilaženju zaštita?",
              "answer": "Virtualizacija omogućuje analitičarima da pokreću aplikacije u okruženju koje je teško detektirati od strane programa. Korištenjem virtualnih strojeva, istraživači mogu zaobići mnoge anti-debugging zaštite koje bi se inače aktivirale pri korištenju uobičajenih debugging alata."
            },
            {
              "question": "Koji alati se koriste za analizu obfuskiranih datoteka?",
              "answer": "Za analizu obfuskiranih datoteka koriste se alati poput deobfuscators koji pomažu u vraćanju obfuskiranog koda u njegovu čitljiviju formu. Također se koristi i statička analiza uz alate kao što su Ghidra ili IDA Pro koji omogućuju razgradnju i analizu binarnih datoteka."
            }
          ]
        }
      ]
    },
    {
      "id": 6,
      "name": "socijalni inženjering",
      "levels": [
        {
          "id": 601,
          "name": "Uvod u socijalni inženjering: Metode i tehnike napada",
          "lesson": "Socijalni inženjering je oblik napada u kojem napadači koriste psihološke trikove kako bi manipulisali ljudima, natjerali ih da otkriju povjerljive informacije ili izvrše radnje koje ugrožavaju sigurnost. Ova metoda temelji se na iskorištavanju ljudskih slabosti, kao što su povjerenje, naivnost, strah ili želja za pomoći. Napadači često koriste e-mailove, telefonske pozive ili čak osobne susrete kako bi prevarili žrtve. U kontekstu CTF natjecanja, socijalni inženjering se može koristiti za manipulaciju zaposlenicima ili korisnicima ciljanih organizacija, omogućujući napadačima pristup sigurnosnim sustavima.\n\nPostoje različite tehnike socijalnog inženjeringa, uključujući phishing, vishing, pretexting i baiting. Phishing uključuje slanje lažnih e-mailova koji izgledaju kao legitimni zahtjevi od poznatih organizacija, dok vishing koristi telefon za slične pretrage osjetljivih podataka. Pretexting se temelji na stvaranju lažnog identiteta kako bi se dobile povjerljive informacije, dok baiting koristi fizičke ili virtualne 'mamce' kako bi prevarili žrtve da preuzmu maliciozni softver ili daju pristup osjetljivim podacima.\n\nKako bi se zaštitili od socijalnog inženjeringa, važno je educirati korisnike o opasnostima i načinima prepoznavanja napada. Organizacije bi trebale implementirati sigurnosne politike koje uključuju autentifikaciju korisnika, provjeru e-mailova i telefonskih poziva, te redovito testiranje zaposlenika kroz simulirane napade. Ove mjere pomažu u smanjenju rizika od uspješnih napada socijalnog inženjeringa i zaštiti od potencijalnih prijetnji. Razumijevanje socijalnog inženjeringa ključno je za uspješno rješavanje izazova u CTF natjecanjima.",
          "video": "https://www.youtube.com/watch?v=Z8zyV0Lg6So",
          "fun_facts": [
            {
              "question": "Koja je osnovna strategija socijalnog inženjeringa?",
              "answer": "Osnovna strategija socijalnog inženjeringa je manipulacija ljudskim ponašanjem kako bi se natjerale žrtve da otkriju povjerljive informacije ili izvrše radnje koje ne bi inače učinili. Napadači iskorištavaju ljudske slabosti, kao što su povjerenje i strah, da postignu svoje ciljeve."
            },
            {
              "question": "Koje su najčešće vrste socijalnog inženjeringa?",
              "answer": "Najčešće vrste socijalnog inženjeringa uključuju phishing, vishing, pretexting i baiting. Phishing se temelji na lažnim e-mailovima, vishing na telefonskim pozivima, pretexting na lažnim identitetima, a baiting na mamcima poput USB uređaja ili zaraženih web stranica."
            },
            {
              "question": "Kako prepoznati phishing napad?",
              "answer": "Phishing napadi često dolaze u obliku e-mailova koji izgledaju kao da su poslani od legitimnih organizacija, kao što su banke ili poznate web stranice. E-mailovi često sadrže lažne linkove, gramatiku i stil pisanja koji ne odgovara pravim izvorima, te zahtijevaju hitnu akciju poput unosa osjetljivih podataka."
            },
            {
              "question": "Što je pretexting i kako se koristi?",
              "answer": "Pretexting je tehnika u kojoj napadač stvara lažni identitet ili priču kako bi prevario žrtvu i dobio povjerljive informacije. Na primjer, napadač može tvrditi da je zaposlenik banke i tražiti od žrtve da potvrdi svoj račun ili podatke iz sigurnosnih razloga."
            },
            {
              "question": "Koji su najbolji načini zaštite od socijalnog inženjeringa?",
              "answer": "Najbolji načini zaštite uključuju edukaciju korisnika o opasnostima socijalnog inženjeringa, implementaciju višefaktorske autentifikacije, redovite sigurnosne provjere, te obučavanje zaposlenika kako prepoznati i prijaviti sumnjive aktivnosti."
            }
          ]
        },
        {
          "id": 602,
          "name": "Phishing, vishing i pretexting: Kako prepoznati i obraniti se",
          "lesson": "Phishing, vishing i pretexting su tri ključne metode socijalnog inženjeringa koje napadači koriste za krađu osjetljivih informacija. Phishing uključuje slanje lažnih e-mailova koji izgledaju kao da dolaze od poznatih institucija, s ciljem da žrtva otkrije svoje privatne podatke. Vishing je varijacija phishinga koja koristi telefonske pozive za slične napade, gdje napadači lažno predstavljaju službenike banaka ili drugih organizacija. Pretexting, s druge strane, podrazumijeva stvaranje lažnog identiteta kako bi napadač od žrtve dobio povjerljive informacije, najčešće pod izgovorom nužnosti provjere ili potvrde podataka.\n\nDa biste se obranili od ovih napada, uvijek budite oprezni pri unosu osobnih podataka, osobito putem e-maila, telefonskih poziva ili sumnjivih web stranica. Važno je redovito provoditi provjere autentičnosti, kao što je kontaktiranje organizacija na službenim brojevima telefona, a ne putem e-mailova ili sumnjivih linkova. Implementacija višefaktorske autentifikacije može značajno smanjiti rizik od napada čak i ako napadači uspiju prikupiti korisničke podatke.",
          "video": "https://www.youtube.com/watch?v=vFpwFZL44co",
          "fun_facts": [
            {
              "question": "Što je phishing i kako ga prepoznati?",
              "answer": "Phishing je napad u kojem napadači šalju lažne e-mailove koji izgledaju kao da dolaze od pouzdane institucije, kao što je banka. E-mailovi često traže da unesete osjetljive informacije na lažnim web stranicama. Da biste prepoznali phishing, obratite pažnju na neobične URL-ove, lošu gramatiku i prijetnje u poruci."
            },
            {
              "question": "Kako vishing koristi telefon u socijalnom inženjeringu?",
              "answer": "Vishing je oblik phishinga koji se izvodi putem telefona. Napadači se predstavljaju kao službenici banaka, službi za korisnike ili druge institucije i pokušavaju dobiti osobne podatke od žrtve. Prepoznavanje vishing napada uključuje sumnju na pozive od nepoznatih brojeva i zahtjeve za osjetljivim informacijama preko telefona."
            },
            {
              "question": "Što je pretexting i kako ga se koristi u napadima?",
              "answer": "Pretexting je tehnika socijalnog inženjeringa u kojoj napadači stvaraju lažni identitet i izmišljaju priču kako bi prevarili žrtvu da otkrije osjetljive podatke. Često se koriste izgovori poput 'provjere identiteta' ili 'potrebe za potvrdom informacija'. Za zaštitu, važno je uvijek provoditi provjeru izvora prije nego što pružite informacije."
            },
            {
              "question": "Koji su znakovi da je e-mail phishing napad?",
              "answer": "Phishing e-mailovi obično sadrže sumnjive linkove, nagle zahtjeve za akciju (kao što je resetiranje lozinke) ili lošu gramatiku. Također, često uključuju prijetnje, kao što je 'vaš račun će biti blokiran ako ne poduzmete odmah radnju'. Uvijek provjerite URL web stranice prije nego što unesete svoje podatke."
            },
            {
              "question": "Koji su najbolji načini za zaštitu od phishing, vishing i pretexting napada?",
              "answer": "Za zaštitu od ovih napada, ključno je uvijek provoditi provjere autentičnosti putem službenih kanala, koristiti višefaktorsku autentifikaciju i biti oprezan pri otvaranju e-mailova i pozivima od nepoznatih osoba. Također, redovito educirajte sebe i kolege o najnovijim prijetnjama i tehnikama socijalnog inženjeringa."
            }
          ]
        },
        {
          "id": 603,
          "name": "Manipulacija povjerenjem: Korištenje psihologije u socijalnom inženjeringu",
          "lesson": "Manipulacija povjerenjem je ključna komponenta socijalnog inženjeringa, gdje napadači koriste psihološke tehnike kako bi prevarili žrtvu i prikupili osjetljive informacije. Ova tehnika često uključuje iskorištavanje prirodnih ljudskih osobina poput želje za pomaganjem, poštovanja autoriteta, ili straha. Napadači stvaraju iluziju da su vjerodostojni, često se predstavljajući kao poznati i pouzdani subjekti poput kolega, menadžera, ili poznatih institucija, kako bi dobili pristup zaštićenim informacijama.\n\nKorištenje psiholoških taktika uključuje pristup kao što je 'recipročnost' – kad napadač nudi pomoć ili koristi gestu kako bi žrtvu natjerao da osjeća potrebu za uzvratnom uslugom. Također, napadači često koriste taktiku 'hitnosti' gdje stvaraju osjećaj nužnosti i prijetnje, tjerajući žrtvu na brzu reakciju bez vremena za razmišljanje. Manipulacija povjerenjem također može uključivati 'autoritet', gdje napadač koristi status i autoritet kako bi natjerao žrtvu da poduzme akciju, kao što je otkrivanje osobnih podataka.\n\nDa bi se obranili od ovih napada, važno je razviti kritički pristup prema informacijama koje se primaju, osobito kada se radi o neočekivanim zahtjevima za povjerljivim podacima. Obuka zaposlenika i korisnika o psihološkim tehnikama socijalnog inženjeringa može značajno smanjiti uspješnost tih napada. Također, organizacije trebaju implementirati jasne politike sigurnosti koje uključuju procese verifikacije i provjere identiteta, osobito u situacijama kada se zahtijevaju povjerljivi podaci ili kada postoji osjećaj nužnosti.",
          "video": "https://www.youtube.com/watch?v=JqJ0wPn0Q_I",
          "fun_facts": [
            {
              "question": "Kako manipulacija povjerenjem utječe na socijalni inženjering?",
              "answer": "Manipulacija povjerenjem igra ključnu ulogu u socijalnom inženjeringu, jer napadači koriste ljudske osobine kao što su želja za pomaganjem i poštovanje autoriteta kako bi žrtve natjerali da otkriju povjerljive informacije. Koriste taktike poput reciprociteta, hitnosti i autoriteta da stvore osjećaj dužnosti kod žrtve."
            },
            {
              "question": "Koje psihološke tehnike napadači koriste u socijalnom inženjeringu?",
              "answer": "Napadači u socijalnom inženjeringu koriste psihološke tehnike poput reciprociteta, gdje nude pomoć kako bi natjerali žrtvu da uzvrati, ili stvaranje osjećaja hitnosti, gdje žrtva mora brzo reagirati. Također, koriste autoritet, predstavljajući se kao ovlaštene osobe ili institucije kako bi stekli povjerenje žrtve."
            },
            {
              "question": "Zašto je manipulacija povjerenjem učinkovita metoda socijalnog inženjeringa?",
              "answer": "Manipulacija povjerenjem učinkovita je jer se temelji na prirodnim ljudskim instinktima i psihološkim osobinama, poput želje za pomaganjem ili straha od neuspjeha. Ljudi su skloni vjerovati onima koji izgledaju poznato ili autoritativno, što napadačima omogućuje da uspješno prikriju svoje stvarne namjere."
            },
            {
              "question": "Kako se obraniti od manipulacije povjerenjem?",
              "answer": "Za obranu od manipulacije povjerenjem, važno je razviti kritički pristup informacijama i ne donijeti brzopotezne odluke, osobito kad se traže povjerljivi podaci. Provodite uvijek verifikaciju identiteta putem službenih kanala, posebno u situacijama kada postoji osjećaj nužnosti ili hitnosti."
            },
            {
              "question": "Kako organizacije mogu spriječiti napade temeljenje na manipulaciji povjerenjem?",
              "answer": "Organizacije mogu spriječiti napade temeljenje na manipulaciji povjerenjem implementiranjem jasnih politika sigurnosti koje uključuju procese verifikacije i provjere identiteta. Također, važno je educirati zaposlenike o tehnikama socijalnog inženjeringa kako bi postali oprezniji i prepoznali pokušaje manipulacije."
            }
          ]
        }
      ]
    }
  ]
}