import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

const FindVulnerabilityGame = ({ vulnerabilities, currentLevelId }) => {
    const [found, setFound] = useState([]);
    const [hint, setHint] = useState('');
    const [selectedType, setSelectedType] = useState('');
    const navigate = useNavigate();

    useEffect(() => {
        if (found.length === vulnerabilities.total && vulnerabilities.total > 0) {
            setTimeout(() => navigate(`/donut-level/${currentLevelId}`), 1000);
        }
    }, [found]);

    const handleCodeClick = (lineNumber) => {
        if (!selectedType) {
            setHint('Prvo odaberite vrstu ranjivosti');
            return;
        }

        const isCorrect = vulnerabilities.solutions.some(
            v => v.line === lineNumber && v.type === selectedType
        );

        if (isCorrect) {
            if (!found.some(f => f.line === lineNumber && f.type === selectedType)) {
                setFound([...found, { line: lineNumber, type: selectedType }]);
                setHint('✅ Točno! Pronašli ste ranjivost.');
            } else {
                setHint('ℹ Već ste označili ovu ranjivost');
            }
        } else {
            setHint('❌ Pogrešan odabir. Pokušajte ponovno.');
        }
    };

    return (
        <div className="p-6 max-w-6xl mx-auto">
            <h2 className="text-3xl font-bold text-pink-600 mb-6 text-center title-font">
                Pronađite ranjivosti u kodu
                <div className="w-32 h-1 bg-pink-500 mx-auto mt-3"></div>
            </h2>

            {/* Code Display */}
            <div className="mb-8 p-5 rounded-xl bg-white border-2 border-pink-300 shadow-md">
                <div className="font-mono text-sm">
                    {vulnerabilities.code.split('\n').map((line, i) => (
                        <div
                            key={i}
                            className={`p-2 hover:bg-pink-100 cursor-pointer transition-colors ${found.some(f => f.line === i) ?
                                'bg-green-100 border-l-4 border-green-500' : ''}`}
                            onClick={() => handleCodeClick(i)}
                        >
                            <span className="text-pink-500 font-bold mr-4 w-6 inline-block">{i + 1}</span>
                            <span className="text-gray-800">{line}</span>
                        </div>
                    ))}
                </div>
            </div>

            {/* Vulnerability Type Selection */}
            <div className="mb-6 bg-white p-5 rounded-xl border-2 border-pink-300">
                <h3 className="text-xl font-bold text-pink-600 mb-4">ODABERITE VRSTU RANJIVOSTI:</h3>
                <div className="flex flex-wrap gap-3">
                    {vulnerabilities.types.map(type => (
                        <button
                            key={type}
                            className={`px-5 py-2 rounded-lg font-bold transition-all
                                ${selectedType === type ?
                                    'bg-pink-600 text-white shadow-lg' :
                                    'bg-white text-pink-600 border-2 border-pink-400 hover:bg-pink-100'}`}
                            onClick={() => setSelectedType(type)}
                        >
                            {type}
                        </button>
                    ))}
                </div>
            </div>

            {/* Hint Message */}
            <div className={`mb-6 p-4 rounded-lg font-bold text-center
                ${hint.includes('❌') ? 'bg-red-100 text-red-800 border-2 border-red-300' :
                    hint.includes('✅') ? 'bg-green-100 text-green-800 border-2 border-green-300' :
                        'bg-blue-100 text-blue-800 border-2 border-blue-300'}`}
            >
                {hint || 'Odaberite vrstu ranjivosti i kliknite na sumnjivu liniju koda'}
            </div>

            {/* Progress Bar */}
            <div className="mb-2 bg-pink-200 rounded-full h-4 overflow-hidden">
                <div
                    className="bg-pink-600 h-full transition-all duration-500"
                    style={{ width: `${(found.length / vulnerabilities.total) * 100}%` }}
                ></div>
            </div>
            <p className="text-right font-bold text-pink-600">
                PRONAĐENO: {found.length}/{vulnerabilities.total}
            </p>

            {/* Completion Message */}
            {found.length === vulnerabilities.total && vulnerabilities.total > 0 && (
                <div className="mt-6 p-4 bg-green-200 border-2 border-green-500 rounded-lg text-center">
                    <p className="text-green-800 font-bold uppercase">✓ Sve ranjivosti pronađene!</p>
                </div>
            )}
        </div>
    );
};

export default FindVulnerabilityGame;